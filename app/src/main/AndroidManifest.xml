<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.harrison.foodonmymind">

    <uses-feature
        android:name="android.hardware.camera"
        android:required="true" />

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.MANAGE_DOCUMENTS" />

    <!--note: need to put the parentActivityName tag in there in order to have the up toolbar
    functionality work properly and easily-->
    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

            <meta-data
                android:name="android.app.searchable"
                android:resource="@xml/searchable" />

            <intent-filter>
                <action android:name="android.intent.action.SEARCH" />
            </intent-filter>
        </activity>
        <activity android:name=".TabsActivity"
            android:parentActivityName=".MainActivity"/>/>
        <!--
        remember need to add the activity to the manifest or trying to launch an intent that
        launches the below activity will fail as the app will not know about the actiivty class
        -->
        <activity android:name=".AddRecipeActivity"
            android:parentActivityName=".MainActivity"/>

        <!--
        added the below service as we need an intent service to grab the GPS location, as
        this is done through a service and not on main thread
        -->
        <service
            android:name=".GeoIntentService"
            android:exported="false" />

        <!--
        this is required for me to save images taken by the camera as I use this to get the
        URI of a file created for the new image
        -->
        <provider
            android:name="android.support.v4.content.FileProvider"
            android:authorities="@string/file_provider_authority"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/file_paths" />
        </provider>
        <!--note need to put the tag exported to be true for foodprovider in order to allow the
        widgetFactory class to access the data within this ContentProvder-->
        <provider
            android:name=".data.foodProvider"
            android:authorities="@string/food_provider_authority"
            android:exported="true"/>

        <activity android:name=".CustomRecipeActivity"
            android:parentActivityName=".MainActivity"/>/>
        <activity android:name=".CustomListActivity"
            android:parentActivityName=".MainActivity"/>/>

        <!--note: IMPORTANT: there is a difference between BIND_REMOTEVIEW and BIND_REMOTEVIEWS
 since my widget REMOTEVIEWS objects need permission to be BIND_REMOTEVIEWS or else will not
 probably initate the widget service and thus will not actually call widgetDataProvider or
 WidgetService. The widget will still appear in the widget list and the base layout
 can still be correctly shown (ie WidgetProvider class will still be called and its
 onUpdate() method willbe called but when trying to call WidgetService from WidgetProvider
 it will break since it doesn't have permission for REMOTEVIEWS. Also this only realized
 once I uninstalled and reinstalled with new manifest as the manifest doesn't update unless
 you reinstall it on emulator / phone-->
        <!--note also need to add the widget service not just the receiver widget in the manifest-->
        <service android:name=".WidgetService"
            android:permission="android.permission.BIND_REMOTEVIEWS"/>

        <!--
        need this added for the widget to work. Easy way to do this is let android studio do it
        for you by adding a new widget via right click->new->appWidget
        -->
        <receiver android:name=".FoodWidget">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
            </intent-filter>

            <meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/food_widget_info" />
        </receiver>
    </application>

</manifest>